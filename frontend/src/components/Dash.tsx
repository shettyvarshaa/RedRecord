/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/LMZdaD3tpbx
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
import { AvatarImage, AvatarFallback, Avatar } from "./ui/avatar";
import { Button } from "./ui/button";
import { useState, ChangeEvent } from "react";
import Markdown from "react-markdown";

function Pottu(props: any) {
  let dis1, dis2;
  if (props.status == 1) {
    dis1 = "none";
    dis2 = "inherit";
  } else {
    dis2 = "none";
    dis1 = "inherit";
  }
  return (
    <>
      <div
        className="flex flex-col items-center justify-center flex-1"
        style={{ display: dis1 }}
      >
        <h2 className="text-3xl font-bold text-white">Start taking notes!</h2>
        <p className="mt-2 text-center text-gray-400">
          Kickstart your practical learning with Peone!
        </p>
        <input
          type="file"
          onChange={props.change}
          className="text-sm text-gray-400 bg-gray-800 border border-gray-700 rounded p-2"
        />
        <Button className="mt-4 bg-green-500 text-white" onClick={props.upload}>
          Upload
        </Button>
      </div>
      <div>
        <p className="mt-2 text-center text-gray-400" style={{ display: dis2 }}>
          <Markdown className="text-left">{props.content}</Markdown>
        </p>
      </div>
    </>
  );
}

// function Subject(props: any) {
//   return (
//     <>
//       <div className="flex items-center space-x-2 text-white bg-gray-700 px-2 py-1 rounded">
//         <CircleIcon className="h-3 w-3" />
//         <span>{props.subject}</span>
//       </div>
//     </>
//   );
// }

export function Dash() {
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [status, setStatus] = useState<number>(0);
  const [content, setContent] = useState<string>("");

  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0] || null;
    setSelectedFile(file);
  };

  const handleUpload = () => {
    if (selectedFile) {
      const formData = new FormData();
      formData.append("file", selectedFile);

      fetch("http://http://127.0.0.1:8000/transcribe", {
        method: "POST",
        body: formData,
      })
        .then((response) => response.text())
        .then((data) => {
          console.log("File uploaded successfully:", data);
          setStatus(1);
          setContent("Analayzinngg....");

          // Make another fetch request to localhost:8000/generate with the transcription text
          return fetch("http://127.0.0.1:8000/generate", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ transcript: data }),
          });
        })
        .then((response) => response.json())
        .then((data) => {
          console.log("Text content processed successfully:", data);
          setStatus(1);
          setContent(data.summary);
        })
        .catch((error) => {
          console.error("Error:", error);
          setStatus(0);
          setContent("Error in file upload or processing");
        });

      setStatus(1);
      setContent("Transcribing.....");
    } else {
      alert("Please select a file first.");
    }
  };

  return (
    <div className="flex h-screen bg-[#121212]">
      <aside className="w-64 flex flex-col border-r border-gray-800">
        <div className="flex flex-col px-4 py-6">
          <div className="mt-6">
            <div className="flex items-center space-x-2 text-white">
              <MicroscopeIcon className="h-5 w-5" />
              <span>Search</span>
            </div>
            <div className="mt-4 flex items-center space-x-2 text-white">
              <BookIcon className="h-5 w-5" />
              <span>Library</span>
            </div>
          </div>
          <div className="mt-6">
            <h3 className="text-xs font-semibold text-gray-400 uppercase">
              Subjects
            </h3>
            <div className="mt-2 space-y-2">
              <div className="flex items-center space-x-2 text-white bg-gray-700 px-2 py-1 rounded">
                <CircleIcon className="h-3 w-3" />
                <span>Machine Learning</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-400">
                <CircleIcon className="h-3 w-3" />
                <span>Data Science</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-400">
                <CircleIcon className="h-3 w-3" />
                <span>DSA</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-400">
                <CircleIcon className="h-3 w-3" />
                <span>Nana</span>
              </div>
              <button className="flex items-center space-x-2 text-gray-400">
                <PlusIcon className="h-5 w-5" />
                <span>Add new project</span>
              </button>
            </div>
          </div>
        </div>
        <div className="mt-auto flex items-center px-4 py-6">
          <Avatar>
            <AvatarImage
              alt="Ryan Lee"
              src="/placeholder.svg?height=32&width=32"
            />
            <AvatarFallback>RL</AvatarFallback>
          </Avatar>
          <div className="ml-3">
            <span className="block text-white">Ryan Lee</span>
            <span className="block text-xs text-gray-400">Premium</span>
          </div>
        </div>
      </aside>
      <main
        className="flex-1 p-6"
        style={{ overflowY: "scroll", textAlign: "left" }}
      >
        <div className="flex flex-col h-full">
          <header className="flex items-center justify-between">
            <div>
              <h1 className="text-xl font-semibold text-white">
                Machine Learning
              </h1>
              <p className="text-sm text-gray-400">First Year notes for ML</p>
            </div>
            <div className="flex items-center space-x-4">
              <ShareIcon className="h-5 w-5 text-gray-400" />
              <BellIcon className="h-5 w-5 text-gray-400" />
              <PowerIcon className="h-5 w-5 text-gray-400" />
            </div>
          </header>
          <Pottu
            change={handleFileChange}
            upload={handleUpload}
            content={content}
            status={status}
          />
          <div className="mt-auto flex items-center justify-between">
            <input
              className="w-full p-2 text-sm text-gray-400 bg-gray-800 border border-gray-700 rounded"
              type="text"
              placeholder="You can ask me anything! I am here to help."
            />
            <MessageCircleIcon className="h-6 w-6 text-gray-400" />
          </div>
        </div>
      </main>
    </div>
  );
}

function BellIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
    </svg>
  );
}

function BookIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20" />
    </svg>
  );
}

function CircleIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
    </svg>
  );
}

function MessageCircleIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z" />
    </svg>
  );
}

function MicroscopeIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 18h8" />
      <path d="M3 22h18" />
      <path d="M14 22a7 7 0 1 0 0-14h-1" />
      <path d="M9 14h2" />
      <path d="M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z" />
      <path d="M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3" />
    </svg>
  );
}

function PlusIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  );
}

function PowerIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 2v10" />
      <path d="M18.4 6.6a9 9 0 1 1-12.77.04" />
    </svg>
  );
}

function ShareIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8" />
      <polyline points="16 6 12 2 8 6" />
      <line x1="12" x2="12" y1="2" y2="15" />
    </svg>
  );
}
